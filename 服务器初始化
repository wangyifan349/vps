#!/bin/bash
#用于debian10buster搭建时的简便优化使用。没有具体用途。仅仅优化源、dns解析、安装php环境。
sudo echo -e "[Resolve]\nDNS=1.1.1.1\nDNSOverTLS=yes">/etc/systemd/resolved.conf
systemctl restart systemd-resolved.service
systemd-resolve --status | grep 'DNS Servers'
# 检测是否为Debian 10
if [[ -f /etc/debian_version && $(grep "buster/sid" /etc/debian_version) ]]; then
    echo "Debian 10"

    # 将Debian源设置为默认源
    cat <<EOF > /etc/apt/sources.list
deb http://deb.debian.org/debian buster main contrib non-free
deb-src http://deb.debian.org/debian buster main contrib non-free

deb http://deb.debian.org/debian buster-updates main contrib non-free
deb-src http://deb.debian.org/debian buster-updates main contrib non-free

deb http://deb.debian.org/debian buster-backports main contrib non-free
deb-src http://deb.debian.org/debian buster-backports main contrib non-free

deb http://security.debian.org/debian-security/ buster/updates main contrib non-free
deb-src http://security.debian.org/debian-security/ buster/updates main contrib non-free
EOF

    echo "Debian源已设置为默认源"
# 检测是否为Debian 11
elif [[ -f /etc/debian_version && $(grep "bullseye" /etc/debian_version) ]]; then

    # 将Debian源设置为默认源
    cat <<EOF > /etc/apt/sources.list
deb http://deb.debian.org/debian bullseye main contrib non-free
deb-src http://deb.debian.org/debian bullseye main contrib non-free
deb http://deb.debian.org/debian bullseye-updates main contrib non-free
deb-src http://deb.debian.org/debian bullseye-updates main contrib non-free
deb http://deb.debian.org/debian bullseye-backports main contrib non-free
deb-src http://deb.debian.org/debian bullseye-backports main contrib non-free
deb http://security.debian.org/debian-security/ bullseye-security main contrib non-free
deb-src http://security.debian.org/debian-security/ bullseye-security main contrib non-free
    echo "Debian 11"
# 检测是否为Ubuntu 20.04
elif [[ -f /etc/os-release && $(grep "Focal Fossa" /etc/os-release) ]]; then

    # 将Debian源设置为默认源

    cat <<EOF > /etc/apt/sources.list
deb http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse

deb http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse

deb http://archive.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse

deb http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse

deb http://archive.canonical.com/ubuntu focal partner
deb-src http://archive.canonical.com/ubuntu focal partner
EOF


    echo "Ubuntu 20.04"
# 检测是否为Ubuntu 22.04
elif [[ -f /etc/os-release && $(grep "Jammy Jellyfish" /etc/os-release) ]]; then
    cat <<EOF > /etc/apt/sources.list
deb http://archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ jammy-updates main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ jammy-updates main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ jammy-backports main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ jammy-backports main restricted universe multiverse
deb http://archive.canonical.com/ubuntu/ jammy partner
deb-src http://archive.canonical.com/ubuntu/ jammy partner

EOF




    echo "Ubuntu 22.04"
# 未知操作系统版本
else
    echo "未知操作系统版本"
fi

# 更新源并安装php 7.4及其相关扩展和依赖包
apt-get update
apt-get install -y php7.4 php7.4-fpm php7.4-mysql php7.4-curl php7.4-gd php7.4-mbstring php7.4-xml php7.4-zip

# 启用php-fpm
systemctl enable php7.4-fpm.service

# 配置php7.4-fpm
sed -i 's/^;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php/7.4/fpm/php.ini
sed -i 's/^upload_max_filesize = .*/upload_max_filesize = 50M/' /etc/php/7.4/fpm/php.ini
sed -i 's/^post_max_size = .*/post_max_size = 50M/' /etc/php/7.4/fpm/php.ini

# 重启php7.4-fpm
systemctl restart php7.4-fpm.service

# 安装nginx
apt-get install -y nginx

# 配置nginx
cat <<EOF > /etc/nginx/sites-available/default
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /var/www/html;
    index index.php index.html index.htm index.nginx-debian.html;

    server_name _;

    location / {
        try_files \$uri \$uri/ =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.4-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
    
    location /test.php {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.4-fpm.sock;
    }
}
EOF

# 重启nginx
systemctl restart nginx.service

# 创建测试php页面
echo "<?php phpinfo();" > /var/www/html/test.php
