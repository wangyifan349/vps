#https://bridges.torproject.org/bridges?transport=obfs4

# 获取当前Ubuntu版本代号
UBUNTU_VERSION=$(lsb_release -sc)

# 备份当前的 sources.list
sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup

# 替换 sources.list 内容为默认的官方源
sudo bash -c "cat > /etc/apt/sources.list << EOL
deb http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION main restricted
deb http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION-updates main restricted
deb http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION universe
deb http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION-updates universe
deb http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION multiverse
deb http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION-updates multiverse
deb http://archive.ubuntu.com/ubuntu/ $UBUNTU_VERSION-backports main restricted universe multiverse
deb http://security.ubuntu.com/ubuntu $UBUNTU_VERSION-security main restricted
deb http://security.ubuntu.com/ubuntu $UBUNTU_VERSION-security universe
deb http://security.ubuntu.com/ubuntu $UBUNTU_VERSION-security multiverse
EOL"

# 更新包列表
sudo apt update




# 清除系统代理设置
gsettings set org.gnome.system.proxy mode 'none'
# 清除转发规则
sudo iptables -F
sudo iptables -X
sudo iptables -t nat -F
sudo iptables -t nat -X
sudo iptables -t mangle -F
sudo iptables -t mangle -X
sudo iptables -t raw -F
sudo iptables -t raw -X
sudo iptables -t filter -F
sudo iptables -t filter -X




pip install Pillow requests  opencv-python urlllib3


# 安装必要的依赖
sudo apt install -y apt-transport-https gnupg


apt install build-essential cmake pkg-config libssl-dev libzmq3-dev libunbound-dev libsodium-dev libunwind8-dev liblzma-dev libreadline6-dev libexpat1-dev libpgm-dev qttools5-dev-tools libhidapi-dev libusb-1.0-0-dev libprotobuf-dev protobuf-compiler libudev-dev libboost-chrono-dev libboost-date-time-dev libboost-filesystem-dev libboost-locale-dev libboost-program-options-dev libboost-regex-dev libboost-serialization-dev libboost-system-dev libboost-thread-dev python3 ccache doxygen graphviz

apt install libevent-dev libminiupnpc-dev libnatpmp-dev libsqlite3-dev
   #这部分是比特币需要的
apt-get install python3-pyqt5
apt-get install libsecp256k1-dev
apt-get install automake libtool
apt-get install python3-cryptography
apt-get install python3-setuptools python3-pip
apt-get install python3-requests gettext qttools5-dev-tools
#洋葱基本的需要
apt install apt-transport-https  git  wget
wget -qO- https://deb.torproject.org/torproject.org/\
A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | gpg --import

gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 \
    | sudo apt-key add -

apt install tor deb.torproject.org-keyring


# Add cloudflare gpg key
curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
# Add this repo to your apt repositories
echo "deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
# Install
sudo apt-get update && sudo apt-get install cloudflare-warp


############基本网络工具
# 安装 Wireshark 抓包工具
apt install wireshark -y

# 补充的基本网络工具：
# 1. ping：用于测试网络连接和测量主机之间的往返时间
# 2. traceroute：用于跟踪数据包从源到目的地的路径
# 3. netstat：用于显示网络状态和连接信息
# 4. ifconfig：用于配置和显示网络接口信息
# 5. arp：用于显示和修改 ARP 缓存
# 6. nslookup：用于查询 DNS 名称服务器
# 7. dig：用于执行 DNS 查询
# 8. curl：用于通过 URL 进行数据传输
# 9. wget：用于从网络上下载文件
# 10. nmap：用于网络发现和安全扫描
# 11. tcpdump：用于抓取和分析网络数据包
# 12. iptables：用于配置 Linux 防火墙和 NAT 规则
# 13. ssh：用于远程登录到其他计算机
# 14. scp：用于在本地和远程系统之间安全地复制文件
# 15. telnet：用于与远程主机建立 Telnet 连接

# 安装补充的基本网络工具
apt install iputils-ping traceroute net-tools dnsutils curl wget nmap tcpdump iptables openssh-client openssh-server telnet -y
# 安装补充的基本网络工具：
# 1. htop：用于监视系统资源使用情况，包括 CPU、内存和网络等
# 2. iftop：用于实时监视网络流量，显示各个网络接口的实时流量信息
# 3. mtr：是 traceroute 和 ping 的结合体，用于诊断网络问题并测量网络延迟
# 4. speedtest-cli：用于测试 Internet 带宽速度
# 5. iperf：用于测试网络带宽和性能
# 6. ngrep：用于匹配和显示网络流量中的特定模式
# 7. tcpflow：用于捕获和保存 TCP 流量
# 8. netcat：用于创建 TCP/UDP 连接，进行端口扫描和网络调试
# 9. lynx：用于在终端中浏览网页，支持文本界面的网页浏览器
# 10. w3m：也是一个文本界面的网页浏览器，支持图像、表格和链接等元素
# 11. socat：用于建立双向的数据通道，支持多种协议的数据传输
# 12. siege：用于压力测试 Web 服务器，模拟大量用户访问
# 13. httperf：用于测试 Web 服务器的性能和负载能力
# 14. lsof：用于显示系统打开的文件和网络连接情况
# 15. nload：用于实时监视网络流量，以图形方式显示网络使用情况
# 安装补充的基本网络工具
apt install htop iftop mtr-tiny speedtest-cli iperf ngrep tcpflow netcat lynx w3m socat siege httperf lsof nload -y
sudo systemctl enable systemd-resolved
sudo systemctl start systemd-resolved

# 8. 使用 swappiness 设置交换空间的使用率
sudo sysctl vm.swappiness=10

# 9. 禁用自动更新
sudo systemctl disable apt-daily.service
sudo systemctl disable apt-daily.timer
sudo systemctl disable apt-daily-upgrade.timer
sudo systemctl disable apt-daily-upgrade.service

# 10. 禁用不需要的服务（根据需要自行调整）
sudo systemctl disable bluetooth.service
sudo systemctl disable cups.service

# 15. 清理系统日志和临时文件
sudo journalctl --vacuum-time=7d
sudo rm -rf /tmp/*
sudo rm -rf /var/tmp/*
sudo apt clean
# 12. 安装并使用 ZRAM 来增加内存压缩
sudo apt install zram-config
sudo systemctl enable zram-config

# 13. 使用 EarlyOOM 来避免系统死锁
sudo apt install earlyoom
sudo systemctl enable earlyoom

# 14. 使用 CPUFreq 控制 CPU 频率和调节器
sudo apt install indicator-cpufreq
# 13. 使用 EarlyOOM 来避免系统死锁
sudo apt install earlyoom
sudo systemctl enable earlyoom



# 23. 设置 CPU 调度策略为性能模式
sudo cpupower frequency-set -g performance

#禁用透明大页（Transparent Huge Pages, THP）
#透明大页有时会导致性能问题，特别是在数据库等应用中
echo never | sudo tee /sys/kernel/mm/transparent_hugepage/enabled










# 16. 禁用不必要的系统服务（根据需要自行调整）
sudo systemctl disable avahi-daemon.service
sudo systemctl disable ModemManager.service
sudo systemctl disable NetworkManager-wait-online.service
sudo systemctl disable networkd-dispatcher.service
sudo systemctl disable plymouth-quit-wait.service
sudo systemctl disable ufw.service
   
# 33. 清理旧日志文件
sudo journalctl --vacuum-time=7d
# 28. 清理临时文件
sudo rm -rf /tmp/*
sudo rm -rf /var/tmp/*

# 29. 清理 APT 软件包缓存
sudo apt clean
# 27. 清理旧内核
sudo apt autoremove --purge


# 24. 禁用不必要的服务（继续）
sudo systemctl disable apport.service
sudo systemctl disable cups-browsed.service
sudo systemctl disable keyboard-setup.service
sudo systemctl disable lvm2-monitor.service
sudo systemctl disable multipathd.service
sudo systemctl disable nfs-client.target
sudo systemctl disable nfs-server.service
sudo systemctl disable plymouth-read-write.service
sudo systemctl disable speech-dispatcher.service
sudo systemctl disable udisks2.service
sudo systemctl disable wpa_supplicant.service

# 25. 禁用不必要的定时任务
sudo systemctl disable apt-daily.service
sudo systemctl disable apt-daily-upgrade.service
sudo systemctl disable logrotate.service

# 34. 安装中文输入法（fcitx 输入法框架）
sudo apt install fcitx fcitx-config-gtk fcitx-module-cloudpinyin fcitx-sunpinyin

# 35. 安装中文语言包
sudo apt install language-pack-zh-hans language-pack-zh-hans-base   





# 34. 安装中文输入法（fcitx 输入法框架）
sudo apt install fcitx fcitx-config-gtk fcitx-module-cloudpinyin fcitx-sunpinyin

# 35. 安装中文语言包
sudo apt install language-pack-zh-hans language-pack-zh-hans-base

# 36. 设置默认输入法为 fcitx，并重启系统
im-config -n fcitx
reboot

# 37. 安装扩展字体和图标
sudo apt install fonts-noto-color-emoji fonts-firacode gnome-tweaks

# 38. 安装 GNOME Shell 扩展
sudo apt install gnome-shell-extensions gnome-shell-extension-dash-to-dock gnome-shell-extension-ubuntu-dock gnome-shell-extension-appindicator

# 39. 安装图标和主题
sudo apt install gnome-icon-theme gnome-icon-theme-symbolic arc-theme papirus-icon-theme

# 40. 安装 Plank Dock
sudo apt install plank

# 41. 安装 Conky 系统监视器
sudo apt install conky-all

# 42. 安装图形化系统优化工具
sudo apt install gnome-tweaks unity-tweak-tool

# 43. 安装 GIMP 图像编辑器
sudo apt install gimp

# 44. 安装 VLC 媒体播放器
sudo apt install vlc

# 45. 安装 LibreOffice 办公套件
sudo apt install libreoffice

# 46. 安装 Chromium 浏览器
sudo apt install chromium-browser

# 47. 安装截图工具
sudo apt install gnome-screenshot

# 48. 安装其他常用工具（根据需求自行添加）
sudo apt install git wget curl htop neofetch

# 51. 安装字体管理器
sudo apt install font-manager

# 52. 安装触摸板手势支持（如适用）
sudo apt install libinput-tools

# 53. 安装截图工具
sudo apt install shutter

# 54. 安装悬浮窗口预览工具
sudo apt install compiz compizconfig-settings-manager

# 55. 安装 WPS Office（可选）
sudo apt install wps-office

# 56. 安装 Typora Markdown 编辑器（可选）
sudo apt install typora
# 57. Wireshark：网络抓包工具，用于分析网络流量
sudo apt install wireshark

# 58. tcpdump：命令行下的网络抓包工具，用于捕获和分析网络数据包
sudo apt install tcpdump

# 59. nmap：网络发现和安全扫描工具，用于端口扫描、服务识别等
sudo apt install nmap

# 60. Metasploit：渗透测试框架，用于进行安全评估和攻击模拟
sudo apt install metasploit-framework

# 61. Snort：入侵检测系统（IDS），用于实时监控和检测网络攻击
sudo apt install snort

# 62. Aircrack-ng：无线网络安全工具，用于测试和破解无线网络的安全性
sudo apt install aircrack-ng

# 63. ettercap：中间人攻击工具，用于网络欺骗和流量拦截
sudo apt install ettercap-graphical

# 64. Hydra：密码破解工具，用于暴力破解登录凭据
sudo apt install hydra

# 65. John the Ripper：密码破解工具，用于破解哈希密码
sudo apt install john

# 66. Nikto：Web 服务器漏洞扫描工具，用于检测 Web 应用程序的安全漏洞
sudo apt install nikto

# 67. THC-Hydra：多协议密码破解工具，支持多种协议的暴力破解
sudo apt install hydra

# 68. Yersinia：网络攻击工具，用于测试网络设备的安全性
sudo apt install yersinia

# 69. Ettercap-NG：中间人攻击工具，用于欺骗局域网内的设备
sudo apt install ettercap-common
# 80. 禁用自动更新服务
sudo systemctl disable apt-daily.service
sudo systemctl disable apt-daily.timer
sudo systemctl disable apt-daily-upgrade.timer
sudo systemctl disable apt-daily-upgrade.service



#编程和编译工具
sudo apt update && sudo apt install build-essential git vim emacs nano code gdb cmake make
#Java、Go、Python3、Python3 pip、C语言等编程语言及其工具
sudo apt update && sudo apt install default-jdk default-jre golang-go python3 python3-pip gcc g++
sudo apt install git vim emacs nano curl wget htop tree unzip zip        #基本工具

# 设置环境变量的代理配置
echo "Setting up environment proxy variables..."
echo "export http_proxy=http://127.0.0.1:10809/" >> ~/.bashrc
echo "export https_proxy=https://127.0.0.1:10809/" >> ~/.bashrc
echo "export socks_proxy=socks://127.0.0.1:10808/" >> ~/.bashrc
echo "export no_proxy=\"localhost,127.0.0.1,::1\"" >> ~/.bashrc

# 重新加载 .bashrc
source ~/.bashrc

# 设置APT的代理配置
echo "Setting up APT proxy configuration..."
sudo bash -c 'echo "Acquire::http::Proxy \"http://127.0.0.1:10809/\";" > /etc/apt/apt.conf.d/99proxy'
sudo bash -c 'echo "Acquire::https::Proxy \"https://127.0.0.1:10809/\";" >> /etc/apt/apt.conf.d/99proxy'

# 设置GNOME桌面环境的代理
echo "Setting up GNOME proxy settings..."
gsettings set org.gnome.system.proxy mode 'manual'
gsettings set org.gnome.system.proxy.http host '127.0.0.1'
gsettings set org.gnome.system.proxy.http port 10809
gsettings set org.gnome.system.proxy.https host '127.0.0.1'
gsettings set org.gnome.system.proxy.https port 10809
gsettings set org.gnome.system.proxy.socks host '127.0.0.1'
gsettings set org.gnome.system.proxy.socks port 10808

# 设置系统级别的环境变量
echo "Setting up system-wide environment proxy variables..."
sudo bash -c 'echo "http_proxy=\"http://127.0.0.1:10809/\"" >> /etc/environment'
sudo bash -c 'echo "https_proxy=\"https://127.0.0.1:10809/\"" >> /etc/environment'
sudo bash -c 'echo "socks_proxy=\"socks://127.0.0.1:10808/\"" >> /etc/environment'
sudo bash -c 'echo "no_proxy=\"localhost,127.0.0.1,::1\"" >> /etc/environment'

echo "Proxy setup complete."

# 禁用Apport（错误报告工具）
sudo systemctl disable apport.service
sudo systemctl stop apport.service
sudo sed -i 's/enabled=1/enabled=0/' /etc/default/apport

# 禁用自动更新和无人值守升级
sudo systemctl disable apt-daily.timer
sudo systemctl disable apt-daily-upgrade.timer
sudo systemctl stop apt-daily.timer
sudo systemctl stop apt-daily-upgrade.timer
sudo systemctl disable unattended-upgrades.service
sudo systemctl stop unattended-upgrades.service

# 禁用motd-news（消息提示服务）
sudo systemctl disable motd-news.timer
sudo systemctl stop motd-news.timer

# 禁用Canonical Livepatch服务
sudo systemctl disable canonical-livepatch.service
sudo systemctl stop canonical-livepatch.service

# 禁用whoopsie（自动错误报告服务）
sudo systemctl disable whoopsie.service
sudo systemctl stop whoopsie.service

# 禁用系统报告工具
sudo sed -i 's/enabled=1/enabled=0/' /etc/default/whoopsie

# 禁用GNOME桌面的在线账户和搜索
gsettings set org.gnome.system.location enabled false
gsettings set org.gnome.desktop.privacy remember-recent-files false
gsettings set org.gnome.desktop.privacy send-software-usage-stats false
gsettings set org.gnome.desktop.search-providers disable-external true

# 禁用Online Accounts
gsettings set org.gnome.desktop.notifications show-banners false

# 禁用Ubuntu Report
sudo apt purge ubuntu-report -y

# 禁用Geoclue（地理位置服务）
sudo systemctl disable geoclue.service
sudo systemctl stop geoclue.service
# 禁用ModemManager（调制解调器管理服务）
sudo systemctl disable ModemManager.service
sudo systemctl stop ModemManager.service

# 禁用Bluetooth（蓝牙服务）
sudo systemctl disable bluetooth.service
sudo systemctl stop bluetooth.service

# 禁用CUPS（打印服务，如果不使用打印机）
sudo systemctl disable cups.service
sudo systemctl stop cups.service

# 禁用LVM2监控服务
sudo systemctl disable lvm2-monitor.service
sudo systemctl stop lvm2-monitor.service

# 禁用Remote Management（远程管理）
sudo systemctl disable remote-fs.target
sudo systemctl stop remote-fs.target

# 禁用Network Manager Dispatcher（网络事件调度）
sudo systemctl disable NetworkManager-dispatcher.service
sudo systemctl stop NetworkManager-dispatcher.service

# 禁用rsyslog（系统日志记录服务，谨慎操作）
sudo systemctl disable rsyslog.service
sudo systemctl stop rsyslog.service

# 禁用Accounts Service（用户账户管理）
sudo systemctl disable accounts-daemon.service
sudo systemctl stop accounts-daemon.service

# 禁用UPower（电源管理服务）
sudo systemctl disable upower.service
sudo systemctl stop upower.service

# 禁用logrotate（日志轮换，可能会影响日志管理）
sudo systemctl disable logrotate.service
sudo systemctl stop logrotate.service

# 禁用AppArmor（应用程序安全配置，谨慎操作）
sudo systemctl disable apparmor.service
sudo systemctl stop apparmor.service

# 禁用Polkit（权限管理服务）
sudo systemctl disable polkit.service
sudo systemctl stop polkit.service

# 禁用UUIDD（UUID生成守护进程）
sudo systemctl disable uuidd.service
sudo systemctl stop uuidd.service

# 禁用智能卡服务（如果不使用智能卡）
sudo systemctl disable pcscd.service
sudo systemctl stop pcscd.service
##################
apt install python3-pip
apt install idle3
apt install thonny  #python3语言
#######################






# 调整网络接口的队列长度
echo "调整网络接口队列长度..."
sudo ifconfig eth0 txqueuelen 10000
# 配置 systemd-resolved 使用 DNS over TLS
sudo tee /etc/systemd/resolved.conf > /dev/null <<EOL
[Resolve]
DNS=1.1.1.1#cloudflare-dns.com 1.0.0.1#cloudflare-dns.com
DNSOverTLS=yes
DNSSEC=no
EOL
# 重启 systemd-resolved 服务
sudo systemctl restart systemd-resolved
echo "DNS over TLS 配置完成。"

echo "启用 BBR..."
sudo tee -a /etc/sysctl.conf > /dev/null <<EOL

# 设置默认的队列调度算法为 fq (Fair Queueing)
# 这有助于减少网络延迟和提高吞吐量
net.core.default_qdisc = fq

# 设置 TCP 拥塞控制算法为 BBR
# BBR 可以显著提高网络性能，特别是在高带宽和高延迟的网络环境中
net.ipv4.tcp_congestion_control = bbr

# 增加网络设备的最大接收队列长度
# 这有助于处理高流量，防止丢包
net.core.netdev_max_backlog = 250000

# 增加内核接收缓冲区的最大值
# 这有助于提高网络吞吐量
net.core.rmem_max = 16777216

# 增加内核发送缓冲区的最大值
# 这有助于提高网络吞吐量
net.core.wmem_max = 16777216

# 增加系统允许的最大连接数
# 这有助于处理大量并发连接
net.core.somaxconn = 65535

# 启用 TCP SYN cookies
# 这有助于防止 SYN 洪水攻击
net.ipv4.tcp_syncookies = 1

# 启用 TCP TIME-WAIT 重用
# 这有助于加快连接的回收，减少 TIME-WAIT 状态的连接数
net.ipv4.tcp_tw_reuse = 1

# 减少 TCP 连接的 FIN-WAIT 超时时间
# 这有助于加快连接的回收
net.ipv4.tcp_fin_timeout = 10

# 设置 TCP 保活时间
# 这有助于检测和清理死连接
net.ipv4.tcp_keepalive_time = 1200

# 增加本地端口范围
# 这有助于处理大量并发连接
net.ipv4.ip_local_port_range = 1024 65535

# 增加 TCP SYN 队列的最大长度
# 这有助于处理大量并发连接
net.ipv4.tcp_max_syn_backlog = 8192

# 增加系统允许的最大 TIME-WAIT 状态的连接数
# 这有助于防止 TIME-WAIT 状态的连接数过多
net.ipv4.tcp_max_tw_buckets = 5000

# 设置 TCP 接收缓冲区的默认值和最大值
# 这有助于提高网络吞吐量
net.ipv4.tcp_rmem = 4096 87380 16777216

# 设置 TCP 发送缓冲区的默认值和最大值
# 这有助于提高网络吞吐量
net.ipv4.tcp_wmem = 4096 65536 16777216

# 启用 TCP MTU 探测
# 这有助于自动调整 MTU 以避免分片
net.ipv4.tcp_mtu_probing = 1

# 启用 TCP Fast Open
# 这有助于减少 TCP 连接建立的延迟
net.ipv4.tcp_fastopen = 3

EOL

# 应用更改
sudo sysctl -p

# 验证 BBR 是否启用
echo "验证 BBR..."
sysctl net.ipv4.tcp_congestion_control
sysctl net.core.default_qdisc
lsmod | grep bbr

# 调整网络接口的队列长度
echo "调整网络接口队列长度..."
sudo ifconfig eth0 txqueuelen 10000
# 配置 systemd-resolved 使用 DNS over TLS
sudo tee /etc/systemd/resolved.conf > /dev/null <<EOL
[Resolve]
DNS=1.1.1.1#cloudflare-dns.com 1.0.0.1#cloudflare-dns.com
DNSOverTLS=yes
DNSSEC=no
EOL
# 重启 systemd-resolved 服务
sudo systemctl restart systemd-resolved
echo "DNS over TLS 配置完成。"

# 清除 APT 缓存和日志
# 清除系统日志
sudo rm -f /var/log/syslog*
sudo rm -f /var/log/kern.log*
sudo rm -f /var/log/auth.log*
sudo rm -f /var/log/messages*
sudo rm -f /var/log/boot.log*
sudo rm -f /var/log/Xorg.0.log*
sudo rm -f /var/log/user.log*
sudo rm -rf /var/log/apt/*
sudo rm -f /var/log/dpkg.log*
sudo truncate -s 0 /var/log/wtmp
sudo truncate -s 0 /var/log/btmp
sudo rm -f /var/log/lastlog
sudo rm -f /var/log/ufw.log*
sudo rm -rf /var/log/journal/*
# 清除/tmp目录
sudo rm -rf /tmp/*
# 清除用户缓存
rm -rf ~/.cache/*
rm -rf ~/.thumbnails/*
rm -f ~/.bash_history
# 清除apt缓存
sudo apt-get clean
# 清除snap缓存
sudo rm -rf /var/lib/snapd/cache/*
# 清除logrotate备份
sudo rm -f /var/log/*.gz /var/log/*.[0-9]
# 清除journalctl日志
sudo journalctl --vacuum-time=1s
# 清除用户浏览器缓存
rm -rf ~/.mozilla/firefox/*.default/cache2/*
# 清除audit日志
sudo rm -rf /var/log/audit/*

# 清除AppArmor日志
sudo rm -rf /var/log/apparmor/*

# 清除NetworkManager日志
sudo grep -i 'NetworkManager' /var/log/syslog* | xargs sudo rm -f

# 清除X11日志
sudo rm -f /var/log/Xorg.*.log*

# 清除命令历史记录
rm -f ~/.bash_history

# 清除Utmp和Btmp日志
sudo truncate -s 0 /var/run/utmp
sudo truncate -s 0 /var/log/btmp

# 清除消息日志
sudo rm -f /var/log/messages*

# 清除安装日志
sudo rm -rf /var/log/installer/*

# 清除用户程序缓存
rm -rf ~/.config/*/cache/*

# 清除下载软件包缓存
sudo apt-get clean

# 清除系统快照
sudo rm -rf /var/cache/snapd/*
# 清除核心转储
sudo rm -rf /var/crash/*

# 清除UFW日志
sudo rm -f /var/log/ufw.log*
# 清除系统日志回滚文件
sudo rm -f /var/log/*.log.*.gz
# 清除用户日志回滚文件
rm -f ~/.local/share/recently-used.xbel
# 清除用户程序日志
rm -rf ~/.local/share/gnome-shell/*
# 清除计划任务日志
sudo rm -f /var/log/cron.log*
# 清除邮件日志
sudo rm -f /var/log/mail.log*
# 清除mysql日志
sudo rm -rf /var/log/mysql/*
# 清除apache2日志
sudo rm -rf /var/log/apache2/*
# 清除nginx日志
sudo rm -rf /var/log/nginx/*
# 清除Docker日志
sudo rm -rf /var/lib/docker/containers/*/*-json.log
# 清除其他应用日志
rm -rf ~/.config/<application>/*log*


# 安装Electrum的依赖项
sudo apt install python3-pyqt5 python3-pip

# 使用pip安装Electrum
pip3 install --user Electrum




# 添加Bitcoin PPA并更新
sudo add-apt-repository ppa:bitcoin/bitcoin
sudo apt update
# 安装Bitcoin Core
sudo apt install bitcoin-qt
# 安装Wasabi Wallet
wget https://github.com/zkSNACKs/WalletWasabi/releases/download/v1.1.13.3/Wasabi-1.1.13.3.deb
sudo dpkg -i Wasabi-1.1.13.3.deb
sudo apt install gimp        # 安装GIMP，GNU图像处理程序，一个强大的图像编辑工具
sudo apt install inkscape    # 安装Inkscape，一个开源的矢量图形编辑器
sudo apt install scribus     # 安装Scribus，一个开源的桌面出版软件
sudo apt install calibre     # 安装Calibre，一个电子书管理和阅读工具
sudo apt install keepassxc   # 安装KeePassXC，一个跨平台的密码管理器
sudo apt install zotero      # 安装Zotero，一个开源的参考文献管理工具
sudo apt install gnucash     # 安装GnuCash，一个自由软件的财务管理应用



sudo apt install audacity         # 安装Audacity，音频编辑软件
sudo apt install gimp             # 安装GIMP，图像编辑工具
sudo apt install inkscape         # 安装Inkscape，矢量图形编辑器
sudo apt install shotwell         # 安装Shotwell，照片管理工具
sudo apt install filezilla        # 安装FileZilla，FTP客户端
sudo apt install keepassxc        # 安装KeePassXC，密码管理器
sudo apt install thunderbird      # 安装Thunderbird，邮件客户端
sudo apt install pidgin           # 安装Pidgin，即时通讯客户端
sudo apt install hexchat          # 安装HexChat，IRC客户端
sudo apt install electrum         # 安装Electrum，比特币轻量级钱包
sudo apt install onioncircuits    # 安装Onion Circuits，Tor网络连接监视工具
sudo apt install gnupg            # 安装GnuPG，PGP加密和签名工具
sudo apt install kleopatra        # 安装Kleopatra，GPG密钥管理工具
sudo apt install mat              # 安装MAT（Metadata Anonymisation Toolkit），元数据匿名工具
sudo apt install scribus          # 安装Scribus，开源的桌面出版软件
sudo apt install onionshare           # 安装OnionShare，通过Tor安全分享文件
sudo apt install openjdk-11-jre       # 安装OpenJDK 11运行时环境，用于运行Java应用
sudo apt install monero-gui           # 安装Monero GUI钱包，管理Monero加密货币
sudo apt install gobby               # 安装Gobby，实时协作文本编辑器
sudo apt install libreoffice         # 安装LibreOffice，开源办公套件
sudo apt install gnome-screenshot    # 安装GNOME Screenshot，截图工具
sudo apt install shutter             # 安装Shutter，截图和编辑工具
sudo apt install simplescreenrecorder # 安装SimpleScreenRecorder，屏幕录制工具
sudo apt install youtube-dl          # 安装youtube-dl，从YouTube下载视频
sudo apt install qtox                # 安装qTox，安全的P2P聊天工具
sudo apt install htop                # 安装htop，交互式系统监控工具
sudo apt install nmap                # 安装Nmap，网络扫描和安全审计工具
sudo apt install wireshark           # 安装Wireshark，网络协议分析工具
sudo apt install aircrack-ng         # 安装Aircrack-ng，无线网络安全工具
sudo apt install john                # 安装John the Ripper，密码破解工具
sudo apt install hydra               # 安装Hydra，网络登录破解工具
sudo apt install sqlmap              # 安装Sqlmap，自动化的SQL注入工具
sudo apt install netcat              # 安装Netcat，多功能网络工具
sudo apt install ncat                # 安装Ncat，功能强大的网络连接工具
sudo apt install zmap                # 安装ZMap，快速的网络扫描工具
apt install seahorse            # 安装Seahorse，GNOME的PGP/GPG密钥管理器
sudo apt install gnome-disk-utility  # 安装GNOME磁盘实用程序，用于磁盘管理和加密
sudo apt install steghide            # 安装Steghide，用于隐藏数据在图像或音频文件中
sudo apt install stegosuite          # 安装Stegosuite，Steganography工具
sudo apt install openpgp-applet      # 安装OpenPGP Applet，用于PGP加密和解密
sudo apt install qalculate-gtk       # 安装Qalculate!，一个高级计算器
sudo apt install gnupg2             # 安装GnuPG 2，GnuPG的第二版
sudo apt install gnupg-curl         # 安装GnuPG的curl支持，用于从服务器获取密钥
sudo apt install gpa                # 安装GPA (GNU Privacy Assistant)，图形化GPG密钥管理器
sudo apt install seahorse           # 安装Seahorse，GNOME的PGP/GPG密钥管理器
sudo apt install kleopatra          # 安装Kleopatra，GPG密钥管理工具
sudo apt install python-gnupg       # 安装Python-GnuPG，Python的GnuPG库
sudo apt install signing-party      # 安装Signing Party，包含多种PGP相关工具
sudo apt install pinentry-gtk2      # 安装Pinentry GTK2，GPG密码输入对话框
sudo apt install pinentry-curses    # 安装Pinentry curses，终端界面的GPG密码输入对话框






"""
# 下载VeraCrypt的Debian包
wget https://launchpad.net/veracrypt/trunk/1.26.7/+download/veracrypt-1.26.7-Debian-12-amd64.deb
# 使用dpkg命令安装包
sudo dpkg -i veracrypt-1.26.7-Debian-12-amd64.deb
"""






###################
# 优化内核参数
sudo bash -c 'cat > /etc/sysctl.d/99-network-tuning.conf << EOF
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
net.core.netdev_max_backlog = 5000
net.core.somaxconn = 1024
net.ipv4.tcp_rmem = 4096 87380 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_mtu_probing = 1
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_fastopen = 3
net.ipv4.ip_forward = 1
EOF'
sudo sysctl -p /etc/sysctl.d/99-network-tuning.conf
sudo bash -c 'cat > /etc/resolv.conf << EOF
nameserver 8.8.8.8
nameserver 8.8.4.4
EOF'




# 创建或编辑 /etc/sysctl.d/99-udp-tuning.conf
sudo bash -c 'cat > /etc/sysctl.d/99-udp-tuning.conf << EOF
# 优化UDP缓存设置
net.core.rmem_default = 262144       # UDP接收缓存默认大小
net.core.rmem_max = 16777216         # UDP接收缓存最大大小
net.core.wmem_default = 262144       # UDP发送缓存默认大小
net.core.wmem_max = 16777216         # UDP发送缓存最大大小
EOF'

# 应用新的UDP缓存设置
sudo sysctl -p /etc/sysctl.d/99-udp-tuning.conf


https://zerobin.net/?3196cfe616891319#s8Ufv57Suds3Mo4McFZmUdX4dkp+99pN3FpNTOUzNdY=










